                                         Part A
 ============================================================================================================================

What type of values are these? If the answer is some type of sequence, also give the length of the sequence. (Answer these without running Python!)
    1)  3.25 + 4   = float 
    2)  True       = bool
    3) 'Hello' + "World" = type is string(str) and length is 10
    4) [1, 2, 3, 4]       = type is list and length is 4
    5) [[1,2], 34, 4.34, 23] = type is list and length is 4
    6) ["abcd"]              = type is list and length is 1

Choose a suitable data type to represent the following values, justify your selection.

   1) Name of the month = type could be string or list. we can have list of strings like month=['January', 'February', 'March', 'April', 'May', 'June', 'July, August', 'September', 'October', 'November', 'December'] and we can access them by index.
   2) Number of the week = prefer to be a string since there are zero leading values on the number of week.
   3) Recorded temperatures for each day of a month = prefer to be a flaat
   4) Mean temperature in a month   = prefer to be float

                                       Part B
==============================================================================================================================

Some of the programs below contain syntax or runtime errors. Find any errors below and suggest a fix. Each of the numbered items is its own program, no code is shared between them. (Again, answer these first without running Python! You can then check your own solutions by running Python on the snippets.)

1) a = 3
   b = '4'
   c = 5
   print(a**2, "plus" + b**2, "equals " + c**2)

   There is no problem with the expression a**2 as both are integers
   for the expression b**2, it is an errors since b is string and it is not possible to have string as a base.
   for the expression "equals " + c**2, the problem is on the concatenation of operator wich expects two strings but
   given string with integer. So, it is an error.

2) some_list = [4,5,6,7,8,9]
   print(a_list['0'])

   The first problem with this one is a_list is not defined and we can not access list elements by providing string as index.
3)  a = 3
    b = 4
    (a**2 + b**2)**0.5 = c
    print(c)

    Here the assignment is operator is reversed. if we do like c= (a**2 + b**2)**0.5, we can print the value c without any problem. So, we can not assign unknown values to constants.

4) some_list_of_things = [23, "hi", 2.4, None, ['blipblop']] 
   for item in my_list:
   print(item) 

   Here we are using unknown list my_list. So, it is a compile time error. If change, my_list to some_list_of_things, It will print the list values.

5) num = 24 
   a = 34.999
   result = num*(13/a**2)+1.0 
   print("Result:" result)

 Here the problem is the argument given to the function print(). we have to use comma to separate the string from the result.
6) letters = ['a','b','c']
   letters[1] = 'x'

   Here we are replacing the value of b with x and it is not an error. if we want to see the result we can use print(letters)

                                                                


